#https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-logging.html
#https://stackify.com/logging-logback/
#https://lankydanblog.com/2017/08/31/configuring-logback-with-spring-boot/

#By default, ERROR-level, WARN-level, and INFO-level messages are logged.
#You can also enable a debug mode by starting your application with a --debug flag.
#or specify debug=true in your application.properties.
debug=true

#!!! When the debug mode is enabled, a selection of core loggers (embedded container, Hibernate, and Spring Boot) 
#are configured to output in DEBUG level. 
#!Enabling the debug mode DOES NOT configure YOUR application to log all messages with DEBUG level.

#Alternatively, you can enable a trace mode by starting your application with a --trace flag (or trace=true in your application.properties). 
#Doing so enables trace logging for a selection of core loggers (embedded container, Hibernate schema generation, and the whole Spring portfolio).

#If you want to write log files in addition to the console output, you need to set a logging.file or logging.path
logging.path=D:/dev/app_data/spring-boot
logging.file=${logging.path}/mylog.log

#Logging properties are independent of the actual logging infrastructure. 
#As a result, specific configuration keys (such as logback.configurationFile for Logback) are not managed by spring Boot.

#LOG LEVELS
#logging.level.<logger-name>=<level>
logging.level.root=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR

#Parameters supported only with the default Logback setup:
logging.file.max-size=5
logging.file.max-history=2
#logging.pattern.console=
#logging.pattern.file=
#logging.pattern.dateformat=
#logging.pattern.level=The format to use when rendering the log level (default %5p)



